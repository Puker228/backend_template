networks:
  app_network:
    driver: bridge


services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    networks:
      - app_network
    env_file:
      - .env

  db:
    image: postgres:15
    container_name: backend-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "51214:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}' ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: backend-redis
    ports:
      - "${REDIS_PORT}:6379"
    command: [ "redis-server" ]
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio
    container_name: backend-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4:9.4
    container_name: backend-pgadmin
    ports:
      - "5050:5050"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: SuperSecret
      PGADMIN_LISTEN_PORT: 5050
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  minio_data: